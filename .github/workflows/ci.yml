name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
      - name: Build backend
        run: mvn clean package
      - name: Run backend tests
        run: mvn test

  frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '16'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Clear npm cache
        run: npm cache clean --force

      - name: Remove google-chrome-stable
        run: |
          sudo apt-get remove -y google-chrome-stable || true
          sudo apt-get autoremove -y

      - name: Install Chromium dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libdouble-conversion3 libminizip1t64 libnss3 libxss1 libasound2t64 libgtk-3-0 libgbm1 libu2f-udev

      - name: Install Chromium
        run: |
          wget http://ftp.ru.debian.org/debian/pool/main/c/chromium/chromium_136.0.7103.113-1_amd64.deb || wget http://deb.debian.org/debian/pool/main/c/chromium/chromium_136.0.7103.113-1_amd64.deb
          ls -l chromium_136.0.7103.113-1_amd64.deb
          sudo dpkg -i chromium_136.0.7103.113-1_amd64.deb || sudo apt-get -f install -y
          echo "CHROME_BIN=/usr/bin/chromium" >> $GITHUB_ENV

      - name: Install ChromiumDriver
        run: |
          wget http://ftp.ru.debian.org/debian/pool/main/c/chromium/chromium-driver_136.0.7103.113-1_amd64.deb
          sudo dpkg -i chromium-driver_136.0.7103.113-1_amd64.deb || sudo apt-get -f install -y

      - name: Debug Chromium installation
        run: |
          dpkg -l | grep chromium || echo "Chromium not installed"
          ls -l /usr/bin/chromium || echo "Chromium binary not found"
          ls -l /usr/lib/chromium/chromedriver || echo "ChromeDriver not found"
          chromium --version || echo "Chromium not executable"

      - name: Install dependencies
        run: npm ci

      - name: Install Protractor
        run: npm install -g protractor

      - name: Copy ChromeDriver to WebDriver Manager
        run: |
          mkdir -p node_modules/protractor/node_modules/webdriver-manager/selenium
          sudo cp /usr/lib/chromium/chromedriver node_modules/protractor/node_modules/webdriver-manager/selenium/chromedriver_136.0.7103.113
          sudo chmod +x node_modules/protractor/node_modules/webdriver-manager/selenium/chromedriver_136.0.7103.113

      - name: Debug Chromium and ChromeDriver
        run: |
          chromium --version || echo "Chromium not found"
          node_modules/protractor/node_modules/webdriver-manager/selenium/chromedriver_136.0.7103.113 --version || echo "ChromeDriver not found"

      - name: Debug WebDriver
        run: ls -la node_modules/protractor/node_modules/webdriver-manager/selenium

      - name: List test files
        run: |
          echo "Unit test files:"
          find src/app -name "*.spec.ts"
          echo "E2E test files:"
          find e2e/src -name "*.e2e-spec.ts"

      - name: Debug Karma and Chromium
        run: |
          npx karma --version
          chromium --version || echo "Chromium not found"
          npx ng version
          protractor --version

      - name: Build project
        run: npx ng build

      - name: Run unit tests
        run: npx ng test --browsers=ChromiumHeadless --watch=false
        env:
          CHROME_BIN: /usr/bin/chromium

      - name: Kill existing processes on port 7860
        run: |
          fuser -k 7860/tcp || true

      - name: Kill existing processes on port 8080
        run: |
          fuser -k 8080/tcp || true

      - name: Start backend
        run: |
          cd ../backend
          mvn spring-boot:run &
          sleep 10

      - name: Debug backend port
        run: lsof -i :8080 || echo "Port 8080 is free"

      - name: Start server for E2E tests
        run: |
          npx ng serve --port 7860 --proxy-config proxy-conf.json &
          echo "E2E_BASE_URL=http://localhost:7860/" >> $GITHUB_ENV
        env:
          CI: true

      - name: Wait for server
        run: sleep 10

      - name: Run E2E tests
        run: npx ng e2e
        env:
          CHROME_BIN: /usr/bin/chromium

      - name: Check test results
        if: always()
        run: |
          echo "Test results summary:"
          if [ -d "coverage" ]; then
            echo "Coverage report generated. Listing files:"
            ls -la coverage
            if [ -f "coverage/lcov.info" ]; then
              echo "Coverage summary:"
              cat coverage/lcov.info | grep -E '^(SF|LF|LH)' || echo "No coverage data"
            fi
          else
            echo "No coverage report generated."
          fi

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-report
          path: frontend/coverage
          retention-days: 7
